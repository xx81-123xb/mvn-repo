<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dupenghao.dph</groupId>
  <artifactId>conmmon</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>conmmon</name>
  <url>http://maven.apache.org</url>

  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <github.global.server>github</github.global.server>
  </properties>

  <dependencies>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>2.12.5</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!--编译插件-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!--本地部署配置-->
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <!-- altDeploymentRepository ：指定替代方案应该部署项目工件的存储库（除了指定的工件）。 -->
          <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
          </altDeploymentRepository>
        </configuration>
      </plugin>
      <!--本地部署配置-->

      <!--发布到远程仓库配置-->
      <!--源码-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-source-plugin</artifactId>-->
<!--        <version>3.2.1</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>attach-sources</id>-->
<!--            <goals>-->
<!--              <goal>jar-no-fork</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->

      <!--github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github-->
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.12</version>
        <configuration>
          <message>Creating site for ${project.artifactId} ${project.version}</message>
          <server>github</server>
          <noJekyll>true</noJekyll>
          <!--本地jar地址, 对应上面的altDeploymentRepository-->
          <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
          <!--分支-->
          <branch>refs/heads/master</branch>
          <merge>true</merge>

          <includes>
            <include>**/*</include>
          </includes>
          <!--对应github上创建的仓库名称 name-->
          <repositoryName>mvn-repo</repositoryName>
          <!--github登录账号 对应的密码存在maven的setting.xml文件中-->
          <!--由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名-->
          <repositoryOwner>xx81-123xb</repositoryOwner>
        </configuration>

        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
      <!--发布到远程仓库配置-->

    </plugins>
  </build>

</project>
